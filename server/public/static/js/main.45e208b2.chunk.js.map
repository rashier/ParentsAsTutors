{"version":3,"sources":["services/AuthService.jsx","resources/Images.jsx","components/navbar/Navbar.jsx","components/auth/Signup.jsx","components/auth/Login.jsx","components/userscomponents/Profile.jsx","components/home/Home.jsx","services/RouteService.jsx","components/teachercomponents/Teacher.jsx","components/teachercomponents/AddActivity.jsx","components/teachercomponents/AddStudent.jsx","App.jsx","serviceWorker.js","index.js"],"names":["AuthService","signup","firstname","surnames","phone","email","username","password","role","service","post","then","response","data","login","loggedin","get","updateprofile","id","logout","this","axios","create","baseURL","process","withCredentials","Images","logo","Navbar","props","handleLogout","e","state","loggedInUser","images","nextProps","setState","Fragment","className","Link","to","src","alt","userInSession","onClick","Component","Signup","handleFormSubmit","event","preventDefault","getUser","user","catch","error","handleChange","target","name","value","onSubmit","type","onChange","Login","Profile","updateProfile","_id","fetch","closeEdit","editProfile","openEdit","Home","url","controls","RouteService","addStudent","studentname","dni","grade","school","emailparent","updatestudent","studentsUser","sons","Teacher","updateStudent","route","selectStudent","studentChange","students","filter","student","RouteServices","alumni","defaultValue","disabled","map","key","AddActivity","addNewActivity","console","log","placeholder","AddStudent","addNewStudent","App","userObj","history","push","fetchUser","err","Redirect","Switch","Route","exact","path","render","withRouter","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6ZAoCeA,EAjCb,aAAe,IAAD,gCAOdC,OAAS,SAACC,EAAWC,EAAUC,EAAOC,EAAOC,EAAUC,EAAUC,GAC/D,OAAO,EAAKC,QAAQC,KAAK,UAAW,CAACR,YAAWC,WAAUC,QAAOC,QAAOC,WAAUC,WAAUC,SAC3FG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SATf,KAYdC,MAAQ,SAACR,EAAUC,GACjB,OAAO,EAAKE,QAAQC,KAAK,SAAU,CAACJ,WAAUC,aAC7CI,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAdf,KAiBdE,SAAW,WACT,OAAO,EAAKN,QAAQO,IAAI,gBACvBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAnBf,KAsBdI,cAAgB,SAACC,EAAId,EAAOC,GAC1B,OAAO,EAAKI,QAAQC,KAAb,iBAAmC,CAACQ,KAAId,QAAOC,UACrDM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAxBf,KA2BdM,OAAS,WACP,OAAO,EAAKV,QAAQO,IAAI,WACvBL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SA5B3BO,KAAKX,QAAUY,IAAMC,OAAO,CAC1BC,QAAQ,GAAD,OAAKC,0CACZC,iBAAiB,KCARC,G,MALb,aAAe,oBACbN,KAAKO,KAAM,sG,kOC0FAC,E,YA/Eb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAURC,aAAe,SAAAC,GACb,EAAKF,MAAMV,UAVX,EAAKa,MAAQ,CAAEC,aAAc,MAC7B,EAAKxB,QAAU,IAAIT,EACnB,EAAKkC,OAAS,IAAIR,EAJD,E,uFAOOS,GACxBf,KAAKgB,S,yVAAL,IAAmBhB,KAAKY,MAAxB,CAA+BC,aAAcE,EAAS,mB,+BAStD,OAAIf,KAAKY,MAAMC,aAEX,kBAAC,IAAMI,SAAP,KACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,kBACb,6BACE,kBAACC,EAAA,EAAD,CAAMC,GAAG,SACT,yBAAKF,UAAU,4BAA4BG,IAAKrB,KAAKc,OAAOP,KAAMe,IAAI,oBAGxE,kBAACH,EAAA,EAAD,CAAMC,GAAG,SACT,mDAGF,6BACE,4BACmC,YAAhCpB,KAAKS,MAAMc,cAAcnC,KACxB,4BAAI,kBAAC+B,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,YAA9B,YACL,KAED,4BAAI,kBAACD,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,YAA9B,YACJ,4BAAI,kBAACD,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,IAAII,QAASxB,KAAKU,cAAhD,cAKV,yBAAKQ,UAAU,YAKjB,6BACE,yBAAKA,UAAU,aACf,yBAAKA,UAAU,kBACX,6BACE,kBAACC,EAAA,EAAD,CAAMC,GAAG,KACT,yBAAKF,UAAU,4BAA4BG,IAAKrB,KAAKc,OAAOP,KAAMe,IAAI,oBAGxE,kBAACH,EAAA,EAAD,CAAMC,GAAG,KACT,mDAGF,4BACE,4BACE,kBAACD,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,WAA9B,WAIF,4BACE,kBAACD,EAAA,EAAD,CAAMD,UAAU,WAAWE,GAAG,UAA9B,iB,GApEKK,aC0FNC,E,YAlGb,WAAYjB,GAAQ,IAAD,8BACjB,4CAAMA,KAKRkB,iBAAmB,SAAAC,GACjBA,EAAMC,iBACN,IAAM/C,EAAY,EAAK8B,MAAM9B,UACvBC,EAAW,EAAK6B,MAAM7B,SACtBC,EAAQ,EAAK4B,MAAM5B,MACnBC,EAAQ,EAAK2B,MAAM3B,MACnBC,EAAW,EAAK0B,MAAM1B,SACtBC,EAAW,EAAKyB,MAAMzB,SACtBC,EAAO,EAAKwB,MAAMxB,KAExB,EAAKC,QACFR,OAAOC,EAAWC,EAAUC,EAAOC,EAAOC,EAAUC,EAASC,GAC7DG,MAAK,SAAAC,GACJ,EAAKwB,SAAS,CACZlC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVC,KAAK,WAEP,EAAKqB,MAAMqB,QAAQtC,EAASuC,SAE7BC,OAAM,SAAAC,GACL,EAAKjB,SAAS,CACZlC,UAAWA,EACXC,SAAUG,EACVF,MAAOA,EACPC,MAAOA,EACPC,SAAUA,EACVC,SAAUA,EACVC,KAAKA,EACL6C,OAAO,QAvCI,EA4CnBC,aAAe,SAAAN,GAAU,IAAD,EACEA,EAAMO,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KA5CxB,EAAKzB,MAAQ,CAAE9B,UAAW,GAAIC,SAAU,GAAIC,MAAO,GAAIC,MAAO,GAAIC,SAAU,GAAIC,SAAU,GAAIC,KAAK,UACnG,EAAKC,QAAU,IAAIT,EAHF,E,sEAiDT,IAAD,OACP,OACE,6BACE,6DACA,gEACA,0BAAM0D,SAAUtC,KAAK2B,kBACnB,6BACE,8CACA,2BAAOY,KAAK,OAAOH,KAAK,YAAYC,MAAOrC,KAAKY,MAAM9B,UAAW0D,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAEpG,6BACE,4CACA,2BAAO4B,KAAK,OAAOH,KAAK,WAAWC,MAAOrC,KAAKY,MAAM7B,SAAUyD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAElG,6BACE,yCACA,2BAAO4B,KAAK,OAAOH,KAAK,QAAQC,MAAOrC,KAAKY,MAAM5B,MAAOwD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAE5F,6BACE,yCACA,2BAAO4B,KAAK,OAAOH,KAAK,QAAQC,MAAOrC,KAAKY,MAAM3B,MAAOuD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAE5F,6BACE,4CACA,2BAAO4B,KAAK,OAAOH,KAAK,WAAWC,MAAOrC,KAAKY,MAAM1B,SAAUsD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAGlG,6BACE,4CACA,2BAAO4B,KAAK,WAAWH,KAAK,WAAWC,MAAOrC,KAAKY,MAAMzB,SAAUqD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAGtG,6BACE,yCACA,4BAASyB,KAAK,OAAOC,MAAOrC,KAAKY,MAAMxB,KAAMoD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,KAC5E,4BAAQ0B,MAAM,UAAd,UACA,4BAAQA,MAAM,WAAd,aAIJ,2BAAOE,KAAK,SAASF,MAAM,aAG7B,4BAAKrC,KAAKY,MAAMqB,MAAQ,QAAU,S,GA7FrBR,aCgENgB,G,kBA5Db,WAAYhC,GAAQ,IAAD,8BACjB,4CAAMA,KAMRkB,iBAAmB,SAACC,GAClBA,EAAMC,iBACN,IAAM3C,EAAW,EAAK0B,MAAM1B,SACtBC,EAAW,EAAKyB,MAAMzB,SAE5B,EAAKE,QAAQK,MAAMR,EAAUC,GAC1BI,MAAK,SAAAC,GACJ,EAAKwB,SAAS,CACZ9B,SAAUA,EACVC,SAAUA,EACV8C,OAAO,IAGT,EAAKxB,MAAMqB,QAAQtC,MAEpBwC,OAAM,SAAAC,GACL,EAAKjB,SAAS,CACZ9B,SAAUA,EACVC,SAAUA,EACV8C,OAAO,QA1BI,EA+BnBC,aAAe,SAACN,GAAW,IAAD,EACAA,EAAMO,OAAtBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KA/BxB,EAAKzB,MAAQ,CAAE1B,SAAU,GAAIC,SAAU,IACvC,EAAKE,QAAU,IAAIT,EACnB,EAAKkC,OAAS,IAAIR,EAJD,E,sEAoCT,IAAD,OAEP,OAAQ,yBAAKY,UAAU,mBACrB,yBAAKA,UAAU,YAAYG,IAAKrB,KAAKc,OAAOP,KAAMe,IAAI,kBAEtD,0BAAMgB,SAAUtC,KAAK2B,kBACnB,6BACE,4CACA,2BAAOY,KAAK,OAAOH,KAAK,WAAWC,MAAOrC,KAAKY,MAAM1B,SAAUsD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAGlG,6BACE,4CACA,2BAAO4B,KAAK,WAAWH,KAAK,WAAWC,MAAOrC,KAAKY,MAAMzB,SAAUqD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAGtG,2BAAO4B,KAAK,SAASF,MAAM,WAG7B,4BAAKrC,KAAKY,MAAMqB,MAAQ,QAAU,S,GAxDpBR,c,kOCDCiB,E,YACnB,WAAYjC,GAAQ,IAAD,8BACjB,4CAAMA,KA0BRkC,cAAgB,SAAAf,GACdA,EAAMC,iBACN,IAAM7C,EAAQ,EAAK4B,MAAM5B,MACnBC,EAAQ,EAAK2B,MAAM3B,MACzB,EAAKI,QAAQQ,cAAc,EAAKY,MAAMc,cAAcqB,IAAI5D,EAAOC,GAC5DM,MAAK,SAAAC,GACR,EAAKwB,SAAS,CACZhC,MAAO,EAAKyB,MAAMc,cAAcvC,MAChCC,MAAO,EAAKwB,MAAMc,cAActC,QAC/B,WACD,EAAKwB,MAAMoC,QACX,EAAKC,kBAIRd,OAAM,SAAAC,GACL,EAAKjB,SAAS,CACZhC,MAAOA,EACPC,MAAOA,EACPgD,OAAO,QA9CQ,EAmDnBC,aAAe,SAAAN,GAAU,IAAD,EACEA,EAAMO,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KAnDxB,EAAKzB,MAAQ,CAAEC,aAAc,KAAMkC,aAAa,EAAO/D,MAAO,GAAKC,MAAO,IAC1E,EAAKI,QAAU,IAAIT,EAHF,E,uFAOOmC,GACxBf,KAAKgB,S,yVAAL,IAAmBhB,KAAKY,MAAxB,CAA+BC,aAAcE,EAAS,mB,iCAItDf,KAAKgB,SAAS,CACZ+B,aAAa,EACb/D,MAAOgB,KAAKS,MAAMc,cAAcvC,MAChCC,MAAOe,KAAKS,MAAMc,cAActC,U,kCAKlCe,KAAKgB,SAAS,CACZhC,MAAM,GACNC,MAAM,GACN8D,aAAa,M,+BAiCP,IAAD,OACP,OACE,oCACA,6BACmC,YAAhC/C,KAAKS,MAAMc,cAAcnC,KACxB,uCAAaY,KAAKS,MAAMc,cAAczC,UAAtC,IAAkDkB,KAAKS,MAAMc,cAAcxC,SAA3E,KACE,sCAAYiB,KAAKS,MAAMc,cAAczC,UAArC,IAAiDkB,KAAKS,MAAMc,cAAcxC,WAC5EiB,KAAKY,MAAMmC,aACX,4BAAQvB,QAAS,kBAAI,EAAKwB,aAA1B,gBAEF,yBAAK3B,IAAI,kEAAkEC,IAAI,uBAC/E,6GACA,kBAACH,EAAA,EAAD,CAAMC,GAAG,SAAQ,4CACgB,YAAhCpB,KAAKS,MAAMc,cAAcnC,KACxB,kBAAC+B,EAAA,EAAD,CAAMC,GAAG,eAAc,wCACxB,kBAACD,EAAA,EAAD,CAAMC,GAAG,SAAQ,oCACe,YAAhCpB,KAAKS,MAAMc,cAAcnC,KACxB,kBAAC+B,EAAA,EAAD,CAAMC,GAAG,gBAAe,0CACzB,MAGH,6BACGpB,KAAKY,MAAMmC,aACV,0BAAMT,SAAUtC,KAAK2C,eACrB,oFACA,6BACE,yCACA,2BAAOJ,KAAK,OAAOH,KAAK,QAAQC,MAAOrC,KAAKY,MAAM5B,MAAOwD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAE5F,6BACE,yCACA,2BAAO4B,KAAK,OAAOH,KAAK,QAAQC,MAAOrC,KAAKY,MAAM3B,MAAOuD,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAE5F,2BAAO4B,KAAK,SAASF,MAAM,0B,GA1FAZ,a,iBCFhBwB,E,iLAGf,OACE,yBAAK/B,UAAU,kBACb,wCACA,yBACEG,IAAI,+EACJC,IAAI,SAEN,kLACA,6BAAK,kBAAC,IAAD,CAAa4B,IAAI,8CAA8CC,UAAQ,U,GAXpD1B,aCyBnB2B,G,MAzBb,aAAe,IAAD,gCAOdC,WAAa,SAACC,EAAaC,EAAKC,EAAOC,EAAQC,GAC7C,OAAO,EAAKrE,QAAQC,KAAK,cAAe,CAACgE,cAAaC,MAAKC,QAAOC,SAAQC,gBACzEnE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SATf,KAYdkE,cAAgB,SAAC7D,EAAI0D,EAAOC,GAC1B,OAAO,EAAKpE,QAAQC,KAAK,iBAAkB,CAACQ,KAAI0D,QAAOC,WACtDlE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAdf,KAiBdmE,aAAa,WACX,OAAO,EAAKvE,QAAQO,IAAI,aACvBL,MAAK,SAAAsE,GACJ,OAAOA,EAAKpE,SAnBdO,KAAKX,QAAUY,IAAMC,OAAO,CAC1BC,QAASC,yCACTC,iBAAiB,M,6jBCsLRyD,E,YAtLb,WAAYrD,GAAQ,IAAD,8BACjB,4CAAMA,KAuCRsD,cAAgB,SAAAnC,GACdA,EAAMC,iBACN,IAAM2B,EAAQ,EAAK5C,MAAM4C,MACnBC,EAAS,EAAK7C,MAAM6C,OAC1B,EAAKO,MACFL,cAAc,EAAK/C,MAAMqD,cAAcrB,IAAKY,EAAOC,GACnDlE,MAAK,SAAAC,GACJ,EAAKwB,SACH,CACEwC,MAAO,EAAK5C,MAAMqD,cAAcT,MAChCC,OAAQ,EAAK7C,MAAMqD,cAAchF,QAEnC,WACE,EAAK6D,kBAIVd,OAAM,SAAAC,GACL,EAAKjB,SAAS,CACZwC,MAAOA,EACPC,OAAQA,EACRxB,OAAO,QA7DI,EAkEnBiC,cAAgB,SAAAtC,GAAU,IAChBS,EAAUT,EAAMO,OAAhBE,MACR,EAAKrB,SAAS,CACZiD,cAAe,EAAKrD,MAAMuD,SAASC,QACjC,SAAAC,GAAO,OAAIA,EAAQzB,MAAQP,KAC3B,MAvEa,EA4EnBH,aAAe,SAAAN,GAAU,IAAD,EACEA,EAAMO,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KA5ExB,EAAK2B,MAAQ,IAAIM,EACjB,EAAK1D,MAAQ,CACXC,aAAc,KACdsD,SAAU,GACVF,cAAe,KACflB,aAAa,GAPE,E,uFAWOhC,GACxBf,KAAKgB,SAAL,KAAmBhB,KAAKY,MAAxB,CAA+BC,aAAcE,EAAS,mB,0CAGnC,IAAD,OAClBf,KAAKgE,MAAMJ,eAAerE,MAAK,SAAA4E,GAC7B,EAAKnD,SAAL,KACK,EAAKJ,MADV,CAEEuD,SAAUA,EAASpC,KAAKwC,e,iCAM5BvE,KAAKgB,SAAS,CACZ+B,aAAa,EACbS,MAAOxD,KAAKY,MAAMqD,cAAcT,MAChCC,OAAQzD,KAAKY,MAAMqD,cAAcR,W,kCAKnCzD,KAAKgB,SAAS,CACZwC,MAAO,GACPC,OAAQ,GACRV,aAAa,M,+BA6CP,IAAD,SACgC/C,KAAKY,MAApCqD,EADD,EACCA,cAAelB,EADhB,EACgBA,YACvB,OACE,kBAAC,IAAM9B,SAAP,KACE,yBAAKC,UAAU,qBACb,uCAAalB,KAAKS,MAAMc,cAAczC,WACtC,wDACA,4BAAQ0F,aAAc,UAAWhC,SAAU,SAAA7B,GAAC,OAAI,EAAKuD,cAAcvD,KACjE,4BAAQ8D,UAAQ,EAACpC,MAAM,WAAvB,oBAGCrC,KAAKY,MAAMuD,SAASO,KAAI,SAAAL,GAAO,OAC9B,4BAAQM,IAAKN,EAAQzB,IAAKP,MAAOgC,EAAQzB,KACtCyB,EAAQf,iBAIZW,EACD,oCACE,2BACE/C,UAAY6B,EAAyC,WAA3B,0BAE1B,+BACE,4BACE,4CACA,qCACA,sCACA,gDAGJ,+BACE,4BACE,4BAAKkB,EAAcX,aACnB,4BAAKW,EAAcT,OACnB,4BAAKS,EAAcR,QACnB,4BAAKQ,EAAcP,cACjBX,GACA,4BACE,4BAAQvB,QAAS,kBAAM,EAAKwB,aAA5B,oBAQV,0BACEV,SAAUtC,KAAK+D,cACf7C,UAAW6B,EAAc,sBAAwB,YAEjD,sDACA,+BACE,+BACE,4BACE,4CACA,qCACA,sCACA,gDAGJ,+BACE,4BACE,4BAAKkB,EAAcX,aACnB,4BACE,2BACEf,KAAK,OACLH,KAAK,QACLoC,aAAcP,EAAcT,MAC5BhB,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAGrC,4BACE,2BACE4B,KAAK,OACLH,KAAK,SACLoC,aAAcP,EAAcR,OAC5BjB,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,OAGrC,4BAAKsD,EAAcP,cACjBX,GACA,4BAAI,4BAAQvB,QAAS,kBAAM,EAAKwB,aAA5B,oBAOZ,2BAAOT,KAAK,SAASF,MAAM,qBAI/B,GAEF,kBAAClB,EAAA,EAAD,CAAMC,GAAG,YAAT,c,GAhLYK,a,kOC4DPmD,E,YA3Db,WAAYnE,GAAQ,IAAD,8BACjB,4CAAMA,KAIRoE,eAAiB,SAAAjD,GACfA,EAAMC,iBACN,IAAMyB,EAAc,EAAK1C,MAAM0C,YACzBC,EAAM,EAAK3C,MAAM2C,IACjBC,EAAQ,EAAK5C,MAAM4C,MACnBC,EAAS,EAAK7C,MAAM6C,OACpBC,EAAc,EAAK9C,MAAM8C,YAE/B,EAAKM,MAAMX,WAAWC,EAAaC,EAAKC,EAAOC,EAAQC,GACpDnE,MAAK,WACJ,EAAKyB,S,yVAAL,IACM,EAAKJ,WAGZoB,OAAM,SAAAC,GAAK,OAAI6C,QAAQC,IAAI9C,OAnBb,EAuBnBC,aAAe,SAAAN,GAAU,IAAD,EACEA,EAAMO,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KAvBxB,EAAK2B,MAAQ,IAAIM,EAFA,E,sEA4BT,IAAD,OACP,OACE,kBAAC,IAAMrD,SAAP,KACE,yBAAKC,UAAU,qBACb,+EACA,yBAAKA,UAAU,0BACb,0BAAMoB,SAAUtC,KAAK6E,gBACnB,yBAAK3D,UAAU,kBACb,yBAAKA,UAAU,2BACb,2BAAOA,UAAU,iBAAjB,YACA,2BAAOA,UAAU,iBAAjB,eACA,2BAAOA,UAAU,iBAAjB,yBACA,2BAAOA,UAAU,iBAAjB,6BAEF,yBAAKA,UAAU,2BACb,2BAAOA,UAAU,gBAAgBqB,KAAK,OAAOH,KAAK,aAAa4C,YAAY,WAAWxC,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,MACvH,4BAAQO,UAAU,gBAAgBkB,KAAK,gBACvC,2BAAOlB,UAAU,gBAAgBqB,KAAK,OAAOH,KAAK,WAAW4C,YAAY,6BAA6BxC,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,MACvI,2BAAOO,UAAU,gBAAeqB,KAAK,OAAOH,KAAK,QAAQ4C,YAAY,sCAAsCxC,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,MAC9I,+CAKN,kBAACQ,EAAA,EAAD,CAAMC,GAAG,YAAT,c,GArDgBK,a,kOCkFXwD,E,YAlFb,WAAYxE,GAAQ,IAAD,8BACjB,4CAAMA,KAKRyE,cAAgB,SAAAtD,GACdA,EAAMC,iBACN,IAAMyB,EAAc,EAAK1C,MAAM0C,YACzBC,EAAM,EAAK3C,MAAM2C,IACjBC,EAAQ,EAAK5C,MAAM4C,MACnBC,EAAS,EAAK7C,MAAM6C,OACpBC,EAAc,EAAK9C,MAAM8C,YAE/B,EAAKM,MAAMX,WAAWC,EAAaC,EAAKC,EAAOC,EAAQC,GACpDnE,MAAK,WACJ,EAAKyB,S,yVAAL,IACM,EAAKJ,MADX,CAEI0C,YAAa,GACbC,IAAK,GACLvE,MAAO,GACPwE,MAAO,GACPC,OAAQ,GACRC,YAAa,SAGlB1B,OAAM,SAAAC,GACL,EAAKjB,SAAS,CACZsC,YAAaA,EACbC,IAAKA,EACLC,MAAOA,EACPC,OAAQA,EACRC,YAAaA,EACbzB,OAAO,QAjCI,EAwCnBC,aAAe,SAAAN,GAAU,IAAD,EACEA,EAAMO,OAAtBC,EADc,EACdA,KAAMC,EADQ,EACRA,MACd,EAAKrB,SAAL,eAAiBoB,EAAOC,KAxCxB,EAAKzB,MAAQ,CAAE0C,YAAa,GAAIC,IAAK,GAAIvE,MAAO,GAAIwE,MAAO,GAAIC,OAAQ,GAAIC,YAAa,IACxF,EAAKM,MAAQ,IAAIM,EAHA,E,sEA6CT,IAAD,OACP,OACE,kBAAC,IAAMrD,SAAP,KACA,yBAAKC,UAAU,qBACb,8EACA,yBAAKA,UAAU,0BACf,0BAAMoB,SAAUtC,KAAKkF,eACnB,yBAAKhE,UAAU,kBACb,yBAAKA,UAAU,2BACb,2BAAOA,UAAU,iBAAjB,iBACA,2BAAOA,UAAU,iBAAjB,eACA,2BAAOA,UAAU,iBAAjB,UACA,2BAAOA,UAAU,iBAAjB,WACA,2BAAOA,UAAU,iBAAjB,kBAEF,yBAAKA,UAAU,2BACb,2BAAOA,UAAU,gBAAgBqB,KAAK,OAAOF,MAAOrC,KAAKY,MAAM0C,YAAalB,KAAK,cAAc4C,YAAY,0BAA0BxC,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,MACtK,2BAAOO,UAAU,gBAAgBqB,KAAK,OAAOF,MAAOrC,KAAKY,MAAM2C,IAAKnB,KAAK,MAAM4C,YAAY,YAAYxC,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,MACxI,2BAAOO,UAAU,gBAAgBqB,KAAK,OAAOF,MAAOrC,KAAKY,MAAM4C,MAAOpB,KAAK,QAAQ4C,YAAY,KAAKxC,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,MACrI,2BAAOO,UAAU,gBAAgBqB,KAAK,OAAOF,MAAOrC,KAAKY,MAAM6C,OAAQrB,KAAK,SAAS4C,YAAY,wBAAwBxC,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,MAC1J,2BAAOO,UAAU,gBAAgBqB,KAAK,OAAOF,MAAOrC,KAAKY,MAAM8C,YAAatB,KAAK,cAAc4C,YAAY,6BAA6BxC,SAAU,SAAA7B,GAAC,OAAI,EAAKuB,aAAavB,MACzK,2BAAO4B,KAAK,SAASF,MAAM,iBAE7B,4BAAKrC,KAAKY,MAAMqB,MAAQ,2BAA6B,OAMzD,kBAACd,EAAA,EAAD,CAAMC,GAAG,YAAT,c,GA3EiBK,aCUnB0D,E,YACJ,WAAY1E,GAAQ,IAAD,8BACjB,4CAAMA,KAORqB,QAAU,SAAAsD,GACR,EAAKpE,SACH,CACEH,aAAcuE,IAEhB,WACE,EAAK3E,MAAM4E,QAAQC,KAAK,gBAdX,EAmBnBvF,OAAS,WACP,EAAKV,QAAQU,SAASR,MAAK,WACzB,EAAKyB,SAAS,CAAEH,aAAc,OAAO,WAAK,EAAKJ,MAAM4E,QAAQC,KAAK,YArBnD,EAyBnBC,UAAU,WACR,OAAO,EAAKlG,QACTM,WACAJ,MAAK,SAAAC,GACJ,EAAKwB,SAAS,CACZH,aAAcrB,OAGjBwC,OAAM,SAAAwD,GACL,EAAKxE,SAAS,CACZH,cAAc,QAjCpB,EAAKD,MAAQ,CAAEC,aAAc,MAC7B,EAAKxB,QAAU,IAAIT,EAEnB,EAAK2G,YALY,E,sEAwCT,IAAD,OACP,OAAIvF,KAAKY,MAAMC,aAEX,kBAAC,IAAMI,SAAP,KACE,kBAACwE,EAAA,EAAD,CAAUrE,GAAG,UACT,kBAAC,EAAD,CAAQG,cAAevB,KAAKY,MAAMC,aAAcd,OAAQC,KAAKD,SAC3D,yBAAKmB,UAAU,OACnB,4BAAQA,UAAU,cAChB,kBAACwE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,CAASjD,MAAS,EAAK0C,UAAWhE,cAAe,EAAKX,MAAMC,kBACvG,kBAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,OAAQ,kBAAM,kBAAC,EAAD,CAASvE,cAAe,EAAKX,MAAMC,kBAC9E,kBAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,OAAQ,kBAAM,kBAAC,EAAD,CAAMvE,cAAe,EAAKX,MAAMC,kBACxE,kBAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,cAAcC,OAAQ,kBAAM,kBAAC,EAAD,CAAYvE,cAAe,EAAKX,MAAMC,kBACpF,kBAAC8E,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,eAAeC,OAAQ,kBAAM,kBAAC,EAAD,CAAavE,cAAe,EAAKX,MAAMC,sBAQ9F,kBAAC,IAAMI,SAAP,KACE,kBAACwE,EAAA,EAAD,CAAUrE,GAAG,MACT,kBAAC,EAAD,CAAQG,cAAevB,KAAKY,MAAMC,aAAcd,OAAQC,KAAKD,SAC3D,yBAAKmB,UAAU,OACnB,4BAAQA,UAAU,cAChB,kBAACwE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUC,OAAQ,kBAAM,kBAAC,EAAD,CAAQhE,QAAS,EAAKA,aAChE,kBAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,kBAAC,EAAD,CAAOhE,QAAS,EAAKA,aAC9D,kBAAC6D,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,kBAAC,EAAD,iB,GAtElCrE,aAgFHsE,cAAWZ,G,QCpFNa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASP,OAAO,kBAAC,IAAD,KAAQ,kBAAC,EAAD,OAAiBQ,SAASC,eAAe,SDkH3D,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnH,MAAK,SAAAoH,GACjCA,EAAaC,kB","file":"static/js/main.45e208b2.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}`,\n      withCredentials: true\n    });\n  }\n\n  signup = (firstname, surnames, phone, email, username, password, role) => {\n    return this.service.post('/signup', {firstname, surnames, phone, email, username, password, role})\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/currentUser',)\n    .then(response => response.data)\n  }\n\n  updateprofile = (id, phone, email) => {\n    return this.service.post(`/updateprofile`,{id, phone, email})\n    .then(response => response.data)\n  }\n\n  logout = () => {\n    return this.service.get('/logout',)\n    .then(response => response.data)\n  }\n}\n\nexport default AuthService;","class Images {\n  constructor() {\n    this.logo =\"https://res.cloudinary.com/dogo5yrxs/image/upload/v1570546689/logo-parents-as-tutors01_rbkfdq.png\";\n  }\n}\n\nexport default Images;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../services/AuthService\";\nimport \"../styles/Navbar.css\";\nimport Images from \"../../resources/Images\";\n\n//Para mirar el login social de google                         <==============\n// import { GoogleLogin } from \"react-google-login\";                          |\n// const responseGoogle = response => {                                       |\n//   console.log(response);                                    <==============\n// };\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n    this.images = new Images();\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  handleLogout = e => {\n    this.props.logout();\n  };\n\n  render() {\n  \n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <nav className=\"nav-style\">\n            <div className=\"nav-style-left\">\n              <div>\n                <Link to=\"/home\">\n                <img className=\"navbar-logo rotate-center\" src={this.images.logo} alt=\"logo children\"/>\n                </Link>\n              </div>\n              <Link to=\"/home\">\n              <h1>Parents As Tutors</h1>\n              </Link>\n            </div>\n            <div>\n              <ul>\n                {this.props.userInSession.role==='teacher'?\n                  <li><Link className=\"nav-link\" to=\"/teacher\">Teacher</Link></li>\n                :null}\n                \n                <li><Link className=\"nav-link\" to=\"/profile\">Profile</Link></li>\n                <li><Link className=\"nav-link\" to=\"/\" onClick={this.handleLogout}>Logout</Link></li>\n              </ul>\n            </div>\n          </nav>\n\n          <div className=\"header\"></div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <div>\n          <nav className=\"nav-style\">\n          <div className=\"nav-style-left\">\n              <div>\n                <Link to=\"/\">\n                <img className=\"navbar-logo rotate-center\" src={this.images.logo} alt=\"logo children\" />\n                </Link>\n              </div>\n              <Link to=\"/\">\n              <h1>Parents As Tutors</h1>\n              </Link>\n            </div>\n            <ul>\n              <li>\n                <Link className=\"nav-link\" to=\"/signup\">\n                  Signup\n                </Link>\n              </li>\n              <li>\n                <Link className=\"nav-link\" to=\"/login\">\n                  Login\n                </Link>\n              </li>\n            </ul>\n          </nav>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport AuthService from \"../../services/AuthService\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { firstname: \"\", surnames: \"\", phone: \"\", email: \"\", username: \"\", password: \"\", role:\"parent\", };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    const firstname = this.state.firstname;\n    const surnames = this.state.surnames;\n    const phone = this.state.phone;\n    const email = this.state.email;\n    const username = this.state.username;\n    const password = this.state.password;\n    const role = this.state.role;\n\n    this.service\n      .signup(firstname, surnames, phone, email, username, password,role)\n      .then(response => {\n        this.setState({\n          firstname: \"\",\n          surnames: \"\",\n          phone: \"\",\n          email: \"\",\n          username: \"\",\n          password: \"\",\n          role:\"parent\"\n        });\n        this.props.getUser(response.user);\n      })\n      .catch(error => {\n        this.setState({\n          firstname: firstname,\n          surnames: username,\n          phone: phone,\n          email: email,\n          username: username,\n          password: password,\n          role:role,\n          error: true\n        });\n      });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <h3>Welcome to Parents As Tutors!</h3>\n        <p>Do you want create a new account:</p>\n        <form onSubmit={this.handleFormSubmit}>\n          <div>\n            <label>First Name:</label>\n            <input type=\"text\" name=\"firstname\" value={this.state.firstname} onChange={e => this.handleChange(e)}            />\n          </div>\n          <div>\n            <label>Surnames:</label>\n            <input type=\"text\" name=\"surnames\" value={this.state.surnames} onChange={e => this.handleChange(e)}            />\n          </div>\n          <div>\n            <label>Phone:</label>\n            <input type=\"text\" name=\"phone\" value={this.state.phone} onChange={e => this.handleChange(e)}            />\n          </div>\n          <div>\n            <label>Email:</label>\n            <input type=\"text\" name=\"email\" value={this.state.email} onChange={e => this.handleChange(e)}            />\n          </div>\n          <div>\n            <label>Username:</label>\n            <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)}            />\n          </div>\n\n          <div>\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)}\n            />\n          </div>\n          <div>\n            <label>Role: </label>\n            <select  name=\"role\" value={this.state.role} onChange={e => this.handleChange(e)}>\n              <option value=\"parent\">Parent</option>\n              <option value=\"teacher\">Teacher</option>\n            </select>\n          </div>\n\n          <input type=\"submit\" value=\"Sign up\"/>\n        </form>\n\n        <h1>{this.state.error ? \"Error\" : \"\"}</h1>\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport AuthService from '../../services/AuthService';\nimport Images from \"../../resources/Images\";\nimport \"../styles/Login.css\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: '', password: '' };\n    this.service = new AuthService();\n    this.images = new Images();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n      .then(response => {\n        this.setState({\n          username: username,\n          password: password,\n          error: false\n        });\n\n        this.props.getUser(response)\n      })\n      .catch(error => {\n        this.setState({\n          username: username,\n          password: password,\n          error: true\n        });\n      })\n  }\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  }\n\n  render() {\n\n    return (<div className=\"login-container\">\n      <img className=\"login-img\" src={this.images.logo} alt=\"logo children\"/>\n\n      <form onSubmit={this.handleFormSubmit}>\n        <div>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={e => this.handleChange(e)} />\n        </div>\n\n        <div>\n          <label>Password:</label>\n          <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.handleChange(e)} />\n        </div>\n\n        <input type=\"submit\" value=\"Login\" />\n      </form>\n\n      <h1>{this.state.error ? 'Error' : ''}</h1>\n    </div>)\n  }\n}\n\nexport default Login;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AuthService from \"../../services/AuthService\";\n\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { loggedInUser: null, editProfile: false, phone: \"\",  email: \"\"};\n    this.service = new AuthService();\n\n  }\n  \n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"]});\n  }\n  \n  openEdit() {\n    this.setState({\n      editProfile: true,\n      phone: this.props.userInSession.phone,\n      email: this.props.userInSession.email\n    });\n  }\n\n  closeEdit() {\n    this.setState({\n      phone:\"\",\n      email:\"\",\n      editProfile: false\n    });\n  }\n  \n  updateProfile = event => {\n    event.preventDefault();\n    const phone = this.state.phone;\n    const email = this.state.email\n    this.service.updateprofile(this.props.userInSession._id,phone, email)\n      .then(response => {\n    this.setState({\n      phone: this.props.userInSession.phone,\n      email: this.props.userInSession.email,\n    }, ()=>{\n      this.props.fetch()\n      this.closeEdit()\n    });\n    \n  })\n  .catch(error => {\n    this.setState({\n      phone: phone,\n      email: email,\n      error: true\n    });\n  });\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n  \n  render() {\n    return (\n      <>\n      <div>\n        {this.props.userInSession.role==='teacher'?\n          <h1>Teacher {this.props.userInSession.firstname} {this.props.userInSession.surnames}:</h1>\n          : <h1>Parent {this.props.userInSession.firstname} {this.props.userInSession.surnames}</h1>}\n        {!this.state.editProfile && \n          <button onClick={()=>this.openEdit()}>Edit Profile</button>\n        }\n        <img src=\"https://epss.ucla.edu/media/images/profile_pictures/default.jpg\" alt=\"profile-imgDefault\"/>\n        <p>debo mirar la manera de obtener una vista de actualizacion de datos de usuario</p>\n        <Link to=\"/home\"><p>Back to Home</p></Link>\n        {this.props.userInSession.role==='teacher'?\n          <Link to=\"/addStudent\"><p>Students</p></Link>\n        :<Link to=\"/sons\"><p>Sons</p></Link>}\n        {this.props.userInSession.role==='teacher'?\n          <Link to=\"/addActivity\"><p>Activities</p></Link>\n        :null}\n      </div>\n\n      <div>\n        {this.state.editProfile && \n          <form onSubmit={this.updateProfile}>\n          <h1>si quieres editar tu  perfil modifica acontinuacion:</h1>\n          <div>\n            <label>Phone:</label>\n            <input type=\"text\" name=\"phone\" value={this.state.phone} onChange={e => this.handleChange(e)}/>\n          </div>\n          <div>\n            <label>Email:</label>\n            <input type=\"text\" name=\"email\" value={this.state.email} onChange={e => this.handleChange(e)}/>\n          </div>\n          <input type=\"submit\" value=\"Update Profile\"/>\n          </form>\n        }\n      </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ReactPlayer from 'react-player'\n\nexport default class Home extends Component {\n\n  render() {\n      return (\n        <div className=\"home-container\">\n          <h1>Welcome!</h1>\n          <img\n            src=\"https://turntable.kagiso.io/images/iStock-dad-son-homework-min.width-800.jpg\"\n            alt=\"logo\"\n          />\n          <p>Los padres atraves de las actividades que envia el profesor efectua los refuerzo en casa para que sus hijos den un mayor rendimiento en el colegio.</p>\n          <div><ReactPlayer url='https://www.youtube.com/watch?v=0VMYDJKxGkM' controls /></div>\n        </div>\n      );\n    \n  }\n}\n","import axios from 'axios';\n\nclass RouteService {\n  constructor() {\n    this.service = axios.create({\n      baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true\n    });\n  }\n\n  addStudent = (studentname, dni, grade, school, emailparent) => {\n    return this.service.post('/addstudent', {studentname, dni, grade, school, emailparent})\n    .then(response => response.data)\n  }\n\n  updatestudent = (id, grade, school) => {\n    return this.service.post('/updatestudent', {id, grade, school})\n    .then(response => response.data)\n  }\n\n  studentsUser=()=>{\n    return this.service.get('/children')\n    .then(sons => {\n      return sons.data\n    })\n  }\n}\n\nexport default RouteService;","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Teacher.css\";\nimport RouteServices from \"../../services/RouteService\";\n\nclass Teacher extends Component {\n  constructor(props) {\n    super(props);\n    this.route = new RouteServices();\n    this.state = {\n      loggedInUser: null,\n      students: [],\n      selectStudent: null,\n      editProfile: false\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({ ...this.state, loggedInUser: nextProps[\"userInSession\"] });\n  }\n\n  componentDidMount() {\n    this.route.studentsUser().then(students => {\n      this.setState({\n        ...this.state,\n        students: students.user.alumni\n      });\n    });\n  }\n\n  openEdit() {\n    this.setState({\n      editProfile: true,\n      grade: this.state.selectStudent.grade,\n      school: this.state.selectStudent.school\n    });\n  }\n\n  closeEdit() {\n    this.setState({\n      grade: \"\",\n      school: \"\",\n      editProfile: false\n    });\n  }\n\n  updateStudent = event => {\n    event.preventDefault();\n    const grade = this.state.grade;\n    const school = this.state.school;\n    this.route\n      .updatestudent(this.state.selectStudent._id, grade, school)\n      .then(response => {\n        this.setState(\n          {\n            grade: this.state.selectStudent.grade,\n            school: this.state.selectStudent.email\n          },\n          () => {\n            this.closeEdit();\n          }\n        );\n      })\n      .catch(error => {\n        this.setState({\n          grade: grade,\n          school: school,\n          error: true\n        });\n      });\n  };\n\n  studentChange = event => {\n    const { value } = event.target;\n    this.setState({\n      selectStudent: this.state.students.filter(\n        student => student._id === value\n      )[0]\n      // [name]: value\n    });\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const { selectStudent, editProfile } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"teacher-container\">\n          <h1>Teacher {this.props.userInSession.firstname}</h1>\n          <h2>These are your students:</h2>\n          <select defaultValue={'DEFAULT'} onChange={e => this.studentChange(e)}>\n            <option disabled value=\"DEFAULT\">\n              select a student\n            </option>\n            {this.state.students.map(student => (\n              <option key={student._id} value={student._id}>\n                {student.studentname}\n              </option>\n            ))}\n          </select>\n          {!!selectStudent ? (\n            <>\n              <table\n                className={!editProfile ? \"date-student-container\" : \"formNone\"}\n              >\n                <thead>\n                  <tr>\n                    <th>Student name</th>\n                    <th>Grade</th>\n                    <th>School</th>\n                    <th>Parent's Email</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>{selectStudent.studentname}</td>\n                    <td>{selectStudent.grade}</td>\n                    <td>{selectStudent.school}</td>\n                    <td>{selectStudent.emailparent}</td>\n                    {!editProfile && (\n                      <td>\n                        <button onClick={() => this.openEdit()}>\n                          Edit Student\n                        </button>\n                      </td>\n                    )}\n                  </tr>\n                </tbody>\n              </table>\n              <form\n                onSubmit={this.updateStudent}\n                className={editProfile ? \"studentupsdate-form\" : \"formNone\"}\n              >\n                <h1>For edit this student:</h1>\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Student name</th>\n                      <th>Grade</th>\n                      <th>School</th>\n                      <th>Parent's Email</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td>{selectStudent.studentname}</td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          name=\"grade\"\n                          defaultValue={selectStudent.grade}\n                          onChange={e => this.handleChange(e)}\n                        ></input>\n                      </td>\n                      <td>\n                        <input\n                          type=\"text\"\n                          name=\"school\"\n                          defaultValue={selectStudent.school}\n                          onChange={e => this.handleChange(e)}\n                        ></input>\n                      </td>\n                      <td>{selectStudent.emailparent}</td>\n                      {!editProfile && (\n                        <td><button onClick={() => this.openEdit()}>\n                          Edit Student\n                        </button></td>\n                      )}\n                    </tr>\n                  </tbody>\n                </table>\n                <input type=\"submit\" value=\"Update Student\" />\n              </form>\n            </>\n          ) : (\n            \"\"\n          )}\n          <Link to=\"/profile\">Back</Link>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Teacher;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport \"../styles/Teacher.css\";\nimport RouteServices from '../../services/RouteService'\n\nclass AddActivity extends Component {\n  constructor(props) {\n    super(props);\n    this.route = new RouteServices();\n  }\n\n  addNewActivity = event => {\n    event.preventDefault();\n    const studentname = this.state.studentname;\n    const dni = this.state.dni;\n    const grade = this.state.grade;\n    const school = this.state.school;\n    const emailparent = this.state.emailparent;\n\n    this.route.addStudent(studentname, dni, grade, school, emailparent)\n      .then(() => {\n        this.setState(\n          {...this.state}\n        );\n      })\n      .catch(error => console.log(error))\n  };\n\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"teacher-container\">\n          <h1>For add new activity please complete this form:</h1>\n          <div className=\"teacher-adds-container\">\n            <form onSubmit={this.addNewActivity}>\n              <div className=\"teacher-inputs\">\n                <div className=\"teacher-label-container\">\n                  <label className=\"teacher-label\">Subject:</label>\n                  <label className=\"teacher-label\">Estudiante:</label>\n                  <label className=\"teacher-label\">Description activity:</label>\n                  <label className=\"teacher-label\">Search video in Youtube:</label>\n                </div>\n                <div className=\"teacher-label-container\">\n                  <input className=\"teacher-input\" type=\"text\" name=\"newSubject\" placeholder=\"Religion\" onChange={e => this.handleChange(e)}/>\n                  <select className=\"teacher-input\" name=\"studentCode\"/>\n                  <input className=\"teacher-input\" type=\"text\" name=\"activity\" placeholder=\"The student have adding...\" onChange={e => this.handleChange(e)}/>\n                  <input className=\"teacher-input\"type=\"text\" name=\"video\" placeholder=\"eg. adding and subtracting integers\" onChange={e => this.handleChange(e)}/>\n                <button>Add new</button>\n                </div>\n              </div>\n            </form>\n          </div>\n          <Link to=\"/profile\">Back</Link>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddActivity;\n","import React, { Component } from \"react\";\nimport { Link } from 'react-router-dom';\nimport RouteServices from '../../services/RouteService'\n\nclass AddStudent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { studentname: \"\", dni: \"\", phone: \"\", grade: \"\", school: \"\", emailparent: \"\"};\n    this.route = new RouteServices();\n  }\n\n  addNewStudent = event => {\n    event.preventDefault();\n    const studentname = this.state.studentname;\n    const dni = this.state.dni;\n    const grade = this.state.grade;\n    const school = this.state.school;\n    const emailparent = this.state.emailparent;\n\n    this.route.addStudent(studentname, dni, grade, school, emailparent)\n      .then(() => {\n        this.setState(\n          {...this.state, \n            studentname: \"\", \n            dni: \"\", \n            phone: \"\", \n            grade: \"\", \n            school: \"\", \n            emailparent: \"\"}\n        );\n      })\n      .catch(error => {\n        this.setState({\n          studentname: studentname,\n          dni: dni,\n          grade: grade,\n          school: school,\n          emailparent: emailparent,\n          error: true\n        })\n      \n      })\n  };\n\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n      <div className=\"teacher-container\">\n        <h1>For add new student please complete this form:</h1>\n        <div className=\"teacher-adds-container\">\n        <form onSubmit={this.addNewStudent}>\n          <div className=\"teacher-inputs\">\n            <div className=\"teacher-label-container\">\n              <label className=\"teacher-label\">Student Name:</label>\n              <label className=\"teacher-label\">DNI or NIE:</label>\n              <label className=\"teacher-label\">Grade:</label>\n              <label className=\"teacher-label\">School:</label>\n              <label className=\"teacher-label\">Email Parent:</label>\n            </div>\n            <div className=\"teacher-label-container\">\n              <input className=\"teacher-input\" type=\"text\" value={this.state.studentname} name=\"studentname\" placeholder=\"Sara Benavides Buitrago\" onChange={e => this.handleChange(e)}/>\n              <input className=\"teacher-input\" type=\"text\" value={this.state.dni} name=\"dni\" placeholder=\"Y1234567R\" onChange={e => this.handleChange(e)}/>\n              <input className=\"teacher-input\" type=\"text\" value={this.state.grade} name=\"grade\" placeholder=\"3B\" onChange={e => this.handleChange(e)}/>\n              <input className=\"teacher-input\" type=\"text\" value={this.state.school} name=\"school\" placeholder=\"School Pablo Sarasate\" onChange={e => this.handleChange(e)}/>\n              <input className=\"teacher-input\" type=\"text\" value={this.state.emailparent} name=\"emailparent\" placeholder=\"tatiana.buitrago@gmail.com\" onChange={e => this.handleChange(e)}/>\n              <input type=\"submit\" value=\"Add Student\"/>\n            </div>\n            <h1>{this.state.error ? \"You must fill all fields\" : \"\"}</h1>\n          </div>\n        </form>\n        \n        </div>\n\n        <Link to=\"/profile\">Back</Link>\n\n      </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default AddStudent;\n","import React, { Component } from \"react\";\nimport \"./components/styles/App.css\";\nimport { withRouter } from \"react-router-dom\";\nimport { Switch, Route, Redirect} from \"react-router-dom\";\nimport Navbar from \"./components/navbar/Navbar\";\nimport Signup from \"./components/auth/Signup\";\nimport Login from \"./components/auth/Login\";\nimport AuthService from \"./services/AuthService\";\nimport Profile from \"./components/userscomponents/Profile\";\nimport Home from \"./components/home/Home\";\nimport Teacher from \"./components/teachercomponents/Teacher\";\nimport AddActivity from \"./components/teachercomponents/AddActivity\";\nimport AddStudent from \"./components/teachercomponents/AddStudent\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n\n    this.fetchUser();\n  }\n\n  getUser = userObj => {\n    this.setState(\n      {\n        loggedInUser: userObj\n      },\n      () => {\n        this.props.history.push(\"/profile\");\n      }\n    );\n  };\n\n  logout = () => {\n    this.service.logout().then(() => {\n      this.setState({ loggedInUser: null },()=>{this.props.history.push('/')});\n    });\n  };\n\n  fetchUser=() =>{\n    return this.service\n      .loggedin()\n      .then(response => {\n        this.setState({\n          loggedInUser: response\n        });\n      })\n      .catch(err => {\n        this.setState({\n          loggedInUser: false\n        });\n      });\n  }\n\n  render() {\n    if (this.state.loggedInUser) {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/home\"></Redirect>\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout}/>\n                <div className=\"App\">\n            <header className=\"App-header\">\n              <Switch>\n                <Route exact path=\"/profile\" render={() => <Profile fetch = {this.fetchUser} userInSession={this.state.loggedInUser}/>} />\n                <Route exact path=\"/teacher\" render={() => <Teacher userInSession={this.state.loggedInUser}/>} />\n                <Route exact path=\"/home\" render={() => <Home userInSession={this.state.loggedInUser}/>} />\n                <Route exact path=\"/addStudent\" render={() => <AddStudent userInSession={this.state.loggedInUser}/>} />\n                <Route exact path=\"/addActivity\" render={() => <AddActivity userInSession={this.state.loggedInUser}/>} />\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          <Redirect to=\"/\"></Redirect>\n              <Navbar userInSession={this.state.loggedInUser} logout={this.logout}/>\n                <div className=\"App\">\n            <header className=\"App-header\">\n              <Switch>\n                <Route exact path=\"/signup\" render={() => <Signup getUser={this.getUser} />}/>\n                <Route exact path=\"/login\" render={() => <Login getUser={this.getUser} />}/>\n                <Route exact path=\"/\" render={() => <Home />}/>\n              </Switch>\n            </header>\n          </div>\n        </React.Fragment>\n      );\n    }\n  }\n}\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './components/styles/index.css';\nimport App from './App';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Router><App/></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}